program     <-  SP_COMMENT? chunk
chunk       <-  (stat ';'?)* (laststat ';'?)?
block       <-  chunk

stat        <-  `do` block `end` /
                `while` exp `do` block `end` /
                `repeat` block `until` exp /
                `if` exp `then` block (`elseif` exp `then` block)* (`else` block)? `end` /
                `for` ID '=' exp ',' exp (',' exp)? `do` block `end` /
                `for` namelist `in` explist `do` block `end` /
                `function` funcname funcbody /
                `local` `function` ID funcbody /
                `local` namelist ('=' explist)? / 
                varlist '=' explist /
                functioncall

laststat    <-  `return` explist? / `break`

funcname    <-  ID ('.' ID)* (':' ID)? 

varlist     <-  var (',' var)*
var         <-  ( functioncall / prefiatom ) sufiexp+ / ID

key_exp     <- '[' exp ']'
dot_exp     <- '.' ID
sufiexp     <~ key_exp / dot_exp

namelist    <- ID (',' ID)*

explist     <-  exp (',' exp)*

exp         <-  conj (`or` conj)*
conj        <~  comp (`and` comp)*
comp        <~  conc (comp_op conc)*
conc        <~  arit ('..' arit)*
arit        <~  term (term_op term)*
term        <~  factor (factor_op factor)*
factor      <~  unary ('^' unary)*
unary       <~  unary_op* atom_exp
atom_exp    <~  `nil` / `false` / `true` / NUMBER / STRING / function /
                "..." / prefiexp / tableconstructor

comp_op     <-  "<" / ">" / "<=" / ">=" / "~=" / "=="
term_op     <- "+" / "-"
factor_op   <- "*" / "/" / "%"
unary_op    <- `not` / "#" / "-"

prefiatom   <~ ID / '(' exp ')'
prefiexp    <~ ( functioncall / prefiatom ) sufiexp*

functioncall <- prefiatom ( sufiexp* (args / ':' ID args) )+

args         <- '(' explist? ')' / tableconstructor / STRING

function    <- `function` funcbody
funcbody    <- '(' parlist? ')' block `end`
parlist     <- namelist (',' '...')? / '...'

tableconstructor    <-  '{' fieldlist? '}'
fieldlist   <-  field (fieldsep field)* fieldsep?
field       <- '[' exp ']' '=' exp / ID '=' exp / exp
fieldsep    <- ',' / ';'

ID_START    <- [a-zA-Z_]+

ESC         <-  '\\' ('a' / 'b' / 'f' / 'n' / 'r' / 't' / 'v' / '\\' / "'" / '"' / '\n')
STRING      <- '"' (ESC / [^"])* '"' / "'"  (ESC / [^'])* "'" / LONG_STR

EQUALS      <-  '='*
OPEN_STR    <-  '[' EQUALS '['
CLOSE_STR   <-  ']' EQUALS ']'
CLOSE_EQ    <-  { CLOSE_STR =init_eq , check_eq }
LONG_STR    <-  { OPEN_STR : init_eq } '\n'? (!CLOSE_EQ .)* CLOSE_STR

NUMBER      <- (%d* '.' %d+ / %d+ '.' / %d+) (('e' / 'E') '-'? %d+)?

COMMENT     <- '--' (LONG_STR / [^%nl]*)
SP_COMMENT  <- '#' [^%nl]*